import{l as r}from"./index-CNBhnEaq.js";const t=t=>{if(!t)return"";try{const[r,e]=t.split(":"),n=parseInt(r);if(isNaN(n)||n<0||n>23)throw new Error("Invalid hour");const o=parseInt(e);if(isNaN(o)||o<0||o>59)throw new Error("Invalid minutes");const a=n>=12?"PM":"AM";return`${n%12||12}:${e.padStart(2,"0")} ${a}`}catch(e){return r.error("Error formatting time:",e),t||""}},e=(t,e={})=>{if(!t)return"";try{const r=new Date(t);if(isNaN(r.getTime()))throw new Error("Invalid date");const n={month:e.shortMonth?"short":"long",day:"numeric",year:e.includeYear?"numeric":void 0};return r.toLocaleDateString("en-US",n)}catch(n){return r.error("Error formatting date:",n),t}},n=(t,n,o=!1)=>{try{const r=new Date(t);if(isNaN(r.getTime()))throw new Error("Invalid start date");if(!n||t===n){return e(t,{includeYear:!0})}const o=new Date(n);if(isNaN(o.getTime()))throw new Error("Invalid end date");const a=e(t,{includeYear:!0});return`${a} - ${e(n,{includeYear:!0})}`}catch(a){return r.error("Error formatting date range:",a),t}},o=(n,o,a,i)=>{try{const r=e(n,{includeYear:!0,shortMonth:!0}),s=a?e(a,{includeYear:!0,shortMonth:!0}):"",c=t(o),d=i?t(i):"";return a&&n!==a?d?`${r} ${c} - ${s} ${d}`:`${r} - ${s}`:d?`${r} ${c} - ${d}`:`${r} at ${c}`}catch(s){return r.error("Error getting event date/time:",s),n}};export{n as f,o as g};
